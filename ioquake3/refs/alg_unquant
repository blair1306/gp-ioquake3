<dec f='codebrowser/code/opus-1.1.4/celt/vq.h' l='68' type='unsigned int alg_unquant(celt_norm * X, int N, int K, int spread, int B, ec_dec * dec, opus_val16 gain)'/>
<use f='codebrowser/code/opus-1.1.4/celt/bands.c' l='1021' u='c' c='quant_partition'/>
<doc f='codebrowser/code/opus-1.1.4/celt/vq.h' l='61'>/** Algebraic pulse decoder
 * @param X Decoded normalised spectrum (returned)
 * @param N Number of samples to decode
 * @param K Number of pulses to use
 * @param dec Entropy decoder state
 * @ret A mask indicating which blocks in the band received pulses
 */</doc>
<def f='codebrowser/code/opus-1.1.4/celt/vq.c' l='329' ll='346' type='unsigned int alg_unquant(celt_norm * X, int N, int K, int spread, int B, ec_dec * dec, opus_val16 gain)'/>
<doc f='codebrowser/code/opus-1.1.4/celt/vq.c' l='327'>/** Decode pulse vector and combine the result with the pitch vector to produce
    the final normalised signal in the current band. */</doc>
