<dec f='codebrowser/code/opus-1.1.4/celt/vq.h' l='54' type='unsigned int alg_quant(celt_norm * X, int N, int K, int spread, int B, ec_enc * enc)'/>
<use f='codebrowser/code/opus-1.1.4/celt/bands.c' l='1015' u='c' c='quant_partition'/>
<doc f='codebrowser/code/opus-1.1.4/celt/vq.h' l='45'>/** Algebraic pulse-vector quantiser. The signal x is replaced by the sum of
  * the pitch and a combination of pulses such that its norm is still equal
  * to 1. This is the function that will typically require the most CPU.
 * @param X Residual signal to quantise/encode (returns quantised version)
 * @param N Number of samples to encode
 * @param K Number of pulses to use
 * @param enc Entropy encoder state
 * @ret A mask indicating which blocks in the band received pulses
*/</doc>
<def f='codebrowser/code/opus-1.1.4/celt/vq.c' l='161' ll='325' type='unsigned int alg_quant(celt_norm * X, int N, int K, int spread, int B, ec_enc * enc)'/>
