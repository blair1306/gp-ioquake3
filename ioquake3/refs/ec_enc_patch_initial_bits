<dec f='codebrowser/code/opus-1.1.4/celt/entenc.h' l='93' type='void ec_enc_patch_initial_bits(ec_enc * _this, unsigned int _val, unsigned int _nbits)'/>
<doc f='codebrowser/code/opus-1.1.4/celt/entenc.h' l='79'>/*Overwrites a few bits at the very start of an existing stream, after they
   have already been encoded.
  This makes it possible to have a few flags up front, where it is easy for
   decoders to access them without parsing the whole stream, even if their
   values are not determined until late in the encoding process, without having
   to buffer all the intermediate symbols in the encoder.
  In order for this to work, at least _nbits bits must have already been
   encoded using probabilities that are an exact power of two.
  The encoder can verify the number of encoded bits is sufficient, but cannot
   check this latter condition.
  _val:   The bits to encode (in the least _nbits significant bits).
          They will be decoded in order from most-significant to least.
  _nbits: The number of bits to overwrite.
          This must be no more than 8.*/</doc>
<def f='codebrowser/code/opus-1.1.4/celt/entenc.c' l='214' ll='235' type='void ec_enc_patch_initial_bits(ec_enc * _this, unsigned int _val, unsigned int _nbits)'/>
<use f='codebrowser/code/opus-1.1.4/silk/enc_API.c' l='512' u='c' c='silk_Encode'/>
