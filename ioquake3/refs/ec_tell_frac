<dec f='codebrowser/code/opus-1.1.4/celt/entcode.h' l='121' type='opus_uint32 ec_tell_frac(ec_ctx * _this)'/>
<use f='codebrowser/code/opus-1.1.4/celt/bands.c' l='713' u='c' c='compute_theta'/>
<use f='codebrowser/code/opus-1.1.4/celt/bands.c' l='815' u='c' c='compute_theta'/>
<use f='codebrowser/code/opus-1.1.4/celt/bands.c' l='1433' u='c' c='quant_all_bands'/>
<doc f='codebrowser/code/opus-1.1.4/celt/entcode.h' l='115'>/*Returns the number of bits &quot;used&quot; by the encoded or decoded symbols so far.
  This same number can be computed in either the encoder or the decoder, and is
   suitable for making coding decisions.
  Return: The number of bits scaled by 2**BITRES.
          This will always be slightly larger than the exact value (e.g., all
           rounding error is in the positive direction).*/</doc>
<use f='codebrowser/code/opus-1.1.4/celt/celt_decoder.c' l='919' u='c' c='celt_decode_with_ec'/>
<use f='codebrowser/code/opus-1.1.4/celt/celt_decoder.c' l='935' u='c' c='celt_decode_with_ec'/>
<use f='codebrowser/code/opus-1.1.4/celt/celt_decoder.c' l='952' u='c' c='celt_decode_with_ec'/>
<use f='codebrowser/code/opus-1.1.4/celt/celt_encoder.c' l='1847' u='c' c='celt_encode_with_ec'/>
<use f='codebrowser/code/opus-1.1.4/celt/celt_encoder.c' l='1866' u='c' c='celt_encode_with_ec'/>
<use f='codebrowser/code/opus-1.1.4/celt/celt_encoder.c' l='1906' u='c' c='celt_encode_with_ec'/>
<use f='codebrowser/code/opus-1.1.4/celt/celt_encoder.c' l='2003' u='c' c='celt_encode_with_ec'/>
<def f='codebrowser/code/opus-1.1.4/celt/entcode.c' l='69' ll='84' type='opus_uint32 ec_tell_frac(ec_ctx * _this)'/>
<doc f='codebrowser/code/opus-1.1.4/celt/entcode.c' l='66'>/* This is a faster version of ec_tell_frac() that takes advantage
   of the low (1/8 bit) resolution to use just a linear function
   followed by a lookup to determine the exact transition thresholds. */</doc>
<use f='codebrowser/code/opus-1.1.4/celt/quant_bands.c' l='319' u='c' c='quant_coarse_energy'/>
<use f='codebrowser/code/opus-1.1.4/celt/quant_bands.c' l='338' u='c' c='quant_coarse_energy'/>
